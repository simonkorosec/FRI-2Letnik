pod <- read.table("podatkiSem1.txt", sep=",", header=T)
pod <- read.table("podatkiSem1.txt", sep=",", header=T)
summary(pod)
pod$Glob_sevanje_max   <- NULL
pod$Glob_sevanje_min   <- NULL
pod$Hitrost_vetra_max   <- NULL
pod$Hitrost_vetra_min   <- NULL
pod$Sunki_vetra_max   <- NULL
pod$Sunki_vetra_min   <- NULL
pod$Pritisk_max  <- NULL
pod$Pritisk_min   <- NULL
pod$Vlaga_max   <- NULL
pod$Vlaga_min   <- NULL
pod$Temperatura_Krvavec_max    <- NULL
pod$Temperatura_Krvavec_min   <- NULL
pod$Temperatura_lokacija_max   <- NULL
pod$Temperatura_lokacija_min   <- NULL
pod$Datum <- as.Date(pod$Datum, "%Y-%m-%d")
pod$Mesec <- months(pod$Datum)
pod$Mesec <- as.factor(pod$Mesec)
zima <- pod$Mesec == "februar" | pod$Mesec == "januar" | pod$Mesec == "december"
pomlad <- pod$Mesec == "marec" | pod$Mesec == "april" | pod$Mesec == "maj"
poletje <- pod$Mesec == "junij" | pod$Mesec == "julij" | pod$Mesec == "avgust"
jesen <- pod$Mesec == "september" | pod$Mesec == "oktober" | pod$Mesec == "november"
pod$Letni_cas[zima] <- "zima"
pod$Letni_cas[pomlad] <- "pomlad"
pod$Letni_cas[poletje] <- "poletje"
pod$Letni_cas[jesen] <- "jesen"
pod$Letni_cas <- as.factor(pod$Letni_cas)
pod$Mesec <- NULL
pod$Datum <- NULL
pod$PM10 <- cut(pod$PM10, c(-Inf,35,Inf),labels=c("NIZKA","VISOKA"))
library(CORElearn)
library(randomForest)
library(ipred)
source("mojefunkcije.R")
source("mojefunkcije.R")
v <- vector()
for (i in 1:50) {
sel <- sample(1:nrow(pod), size=as.integer(nrow(pod)*0.7), replace=F)
learn <- pod[sel,]
test <- pod[-sel,]
which.max(table(learn$PM10))
majority.class <- names(which.max(table(learn$PM10)))
v[i] <- sum(test$PM10== majority.class) / length(test$PM10)
}
mean(v)
voting <- function(predictions)
{
res <- vector()
  for (i in 1 : nrow(predictions))  
{
vec <- unlist(predictions[i,])
    res[i] <- names(which.max(table(vec)))
  }
  factor(res, levels=levels(predictions[,1]))
}
sel <- sample(1:nrow(pod), size=as.integer(nrow(pod)*0.7), replace=F)
learn <- pod[sel,]
test <- pod[-sel,]
modelDT <- CoreModel(PM10 ~ ., learn, model="tree")
modelRF <- CoreModel(PM10 ~ ., learn, model="rf")
modelRFN <- CoreModel(PM10 ~ ., learn, model="rfNear")
modelKNN <- CoreModel(PM10 ~ ., learn, model="knn", kInNN = 5)
predDT <- predict(modelDT, test, type = "class")
predRF <- predict(modelRF, test, type="class")
predKNN <- predict(modelKNN, test, type="class")
predRFN <- predict(modelRFN, test, type="class")
pred <- data.frame(predDT, predKNN, predRF, predRFN)
predicted <- voting(pred)
CA(test$PM10, predicted)
 install.packages(c("ipred", "prodlim", "CORElearn"))
save.image("C:\\Users\\Simon Korošec\\Documents\\GitHub\\FRI-2Letnik\\UI\\Seminarska\\.RData")
q()
q()
